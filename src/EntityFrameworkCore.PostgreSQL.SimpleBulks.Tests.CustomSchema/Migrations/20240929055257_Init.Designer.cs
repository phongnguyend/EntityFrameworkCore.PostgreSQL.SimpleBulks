// <auto-generated />
using System;
using EntityFrameworkCore.PostgreSQL.SimpleBulks.Tests.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EntityFrameworkCore.PostgreSQL.SimpleBulks.Tests.CustomSchema.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20240929055257_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EntityFrameworkCore.PostgreSQL.SimpleBulks.Tests.Database.CompositeKeyRow<int, int>", b =>
                {
                    b.Property<int>("Id1")
                        .HasColumnType("integer");

                    b.Property<int>("Id2")
                        .HasColumnType("integer");

                    b.Property<int>("Column1")
                        .HasColumnType("integer");

                    b.Property<string>("Column2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Column3")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id1", "Id2");

                    b.ToTable("CompositeKeyRows", "test");
                });

            modelBuilder.Entity("EntityFrameworkCore.PostgreSQL.SimpleBulks.Tests.Database.ConfigurationEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id1")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSensitive")
                        .HasColumnType("boolean");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Key1");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationEntries", "test");
                });

            modelBuilder.Entity("EntityFrameworkCore.PostgreSQL.SimpleBulks.Tests.Database.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("CountryIsoCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Contacts", "test");
                });

            modelBuilder.Entity("EntityFrameworkCore.PostgreSQL.SimpleBulks.Tests.Database.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("CurrentCountryIsoCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers", "test");
                });

            modelBuilder.Entity("EntityFrameworkCore.PostgreSQL.SimpleBulks.Tests.Database.SingleKeyRow<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Column1")
                        .HasColumnType("integer");

                    b.Property<string>("Column2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Column3")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SingleKeyRows", "test");
                });

            modelBuilder.Entity("EntityFrameworkCore.PostgreSQL.SimpleBulks.Tests.Database.Contact", b =>
                {
                    b.HasOne("EntityFrameworkCore.PostgreSQL.SimpleBulks.Tests.Database.Customer", "Customer")
                        .WithMany("Contacts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EntityFrameworkCore.PostgreSQL.SimpleBulks.Tests.Database.Customer", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
